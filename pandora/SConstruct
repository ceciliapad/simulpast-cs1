
import os

release = ARGUMENTS.get('release', 1)
mareNostrum = ARGUMENTS.get('mn', 0)
localmpich = ARGUMENTS.get('localmpich',0)

if int(localmpich) == 1 :
	env = Environment(ENV=os.environ, CXX='/usr/local/bin/mpicxx')
else :
	env = Environment(ENV=os.environ, CXX='mpicxx')

env.VariantDir('build', '.')

if int(release) == 0:
	env['CCFLAGS'] = Split('-g -Wall -DTIXML_USE_STL')    
	if int(mareNostrum) == 1:
		libs = Split('pthread mpich gdal hdf5 mpl z')
	else:
		libs = Split('pthread mpich gdal hdf5 tinyxml mpl z')
	libraryName = 'pandorad'
else:
	env['CCFLAGS'] = Split('-O3 -Wall -DTIXML_USE_STL')
	if int(mareNostrum) == 1:
		libs = Split('pthread mpich gdal hdf5 mpl z')
	else:
		libs = Split('pthread mpich gdal hdf5 tinyxml mpl z')
	libraryName = 'pandora'

srcFiles = Split('World.cxx StaticRaster.cxx Raster.cxx Agent.cxx Statistics.cxx SimulationRecord.cxx AgentRecord.cxx Serializer.cxx Simulation.cxx Config.cxx MpiFactory.cxx IncrementalRaster.cxx')

srcBaseFiles = [] 
for src in srcFiles:
	srcBaseFiles.append('build/'+src)

if int(mareNostrum)==1:
	includeDirs = Split('. /gpfs/apps/HDF5/1.6.5/include')
	includeDirs += ['/gpfs/apps/BOOST/1_39_0/64/include/boost-1_39/']
	includeDirs += ['/gpfs/apps/TINYXML/2.6.2/']
	includeDirs += ['/gpfs/apps/GDAL/1.7.1/64/include']	
	includeDirs += ['/gpfs/apps/TINYXML/2.6.2/64/']
	libDirs = Split('/gpfs/apps/HDF5/1.6.5/lib /opt/ibmcmp/vacpp/10.1/lib64/ /gpfs/apps/GDAL/1.7.1/64/lib /gpfs/apps/TINYXML/2.6.2/64/')
	libs += ['gpfs']
	libs += ['z']
	libs += ['xl']
else:
	includeDirs = Split('. /usr/local/include /usr/local/hdf5/include')
	libDirs = Split('. /usr/local/lib /usr/local/hdf5/lib/')

# if debug && mare nostrum mpitrace is added
if int(release)==0 and int(mareNostrum)==1:
	libs += ['mpitrace']
	libDirs += ['/gpfs/apps/CEPBATOOLS/mpitrace-stable-1.2-mx/lib']

env.SharedLibrary(libraryName, srcBaseFiles, CPPPATH=includeDirs, LIBS=libs, LIBPATH=libDirs)
if int(localmpich) == 1 :
	envPython = Environment(ENV=os.environ, CXX='/usr/local/bin/mpicxx')
else :
	envPython = Environment(ENV=os.environ, CXX='mpicxx')

envPython['LINKFLAGS'] = Split('-Wl,--export-dynamic,-no-undefined')
envPython.VariantDir('build_py', '.')

srcPyFiles = [] 
for src in srcFiles:
	srcPyFiles.append('build_py/'+src)
srcPyFiles.append('build/pyBindings.cxx')
srcPyFiles.append('build/MpiStubCode.cxx')

libsPython = libs
libsPython += ['boost_python']
libsPython += ['python2.7']
includeDirsPython = includeDirs
includeDirsPython += ['/usr/include/python2.7/']

envPython.SharedLibrary('pyPandora', srcPyFiles, CPPPATH=includeDirsPython, LIBS=libsPython, LIBPATH=libDirs )

